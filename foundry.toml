[profile.default]
src = "src"
out = "out"
libs = ["lib"]
remappings = [
    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
    "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
    "forge-std/=lib/forge-std/src/",
]
fs_permissions = [{ access = "read-write", path = "./" }]

# Solidity compiler settings
solc_version = "0.8.20"
evm_version = "paris"
optimizer = true
optimizer_runs = 200
via_ir = true

# Testing settings
verbosity = 2
fuzz_runs = 256
fuzz_max_test_rejects = 65536
fuzz_seed = "0x1"

# Gas settings
gas_reports = ["*"]
gas_reports_ignore = []

# Coverage settings
coverage = true
coverage_reports = ["lcov", "html"]

# Formatter settings
[fmt]
bracket_spacing = true
int_types = "long"
line_length = 120
multiline_func_header = "all"
number_underscore = "thousands"
quote_style = "double"
tab_width = 4
wrap_comments = true

# Invariant testing settings
[invariant]
runs = 256
depth = 15
fail_on_revert = false
call_override = false
dictionary_weight = 40
include_storage = true
include_push_bytes = true

# Profile for CI/CD with more thorough testing
[profile.ci]
fuzz_runs = 10000
invariant_runs = 1000

# Profile for gas optimization testing
[profile.gas]
optimizer = true
optimizer_runs = 1000000
via_ir = true

# RPC endpoints for different networks (optional)
[rpc_endpoints]
mainnet = "https://eth-mainnet.alchemyapi.io/v2/YOUR_API_KEY"
goerli = "https://eth-goerli.alchemyapi.io/v2/YOUR_API_KEY"
sepolia = "https://eth-sepolia.alchemyapi.io/v2/YOUR_API_KEY"
polygon = "https://polygon-mainnet.alchemyapi.io/v2/YOUR_API_KEY"
arbitrum = "https://arb-mainnet.alchemyapi.io/v2/YOUR_API_KEY"

# Etherscan API keys for contract verification
[etherscan]
mainnet = { key = "YOUR_ETHERSCAN_API_KEY" }
goerli = { key = "YOUR_ETHERSCAN_API_KEY" }
sepolia = { key = "YOUR_ETHERSCAN_API_KEY" }
polygon = { key = "YOUR_POLYGONSCAN_API_KEY", url = "https://api.polygonscan.com/" }
arbitrum = { key = "YOUR_ARBISCAN_API_KEY", url = "https://api.arbiscan.io/" }